HTML

Unidad 2

Formato de texto

Negrita:

<b></b> o <strong></strong>

Mientras que B significa simplemente negrita y todos los navegadores la interpretarán como negrita, STRONG es una etiqueta que significa que se tiene que resaltar fuertemente el texto y cada navegador es el responsable de resaltarlo como desee. En la práctica STRONG coloca el texto en negrita, pero podría ser que un navegador decidiese resaltar colocando negrilla, subrayado y color rojo en el texto.

Letra itálica:

<i></i>

Subíndices y Supraindices:

<sup> y </sup> para los supraíndices

<sub> y </sub> para los subíndices

Enlaces

<a href="destino">hacé click aquí</a> para poner vínculos

si queremos que el contenido del enlace sea una imagen y no un texto, podremos colocar la correspondiente etiqueta IMG dentro de la etiqueta 
ej. <a href="https://www.google.com/"><img src="logo.jpg"></a>

Podemos crear vínculos que se dirigan a otras partes de la misma página web 
ej. <a href="#abajo">Ir abajo</a>

Podemos crear vínculos que se dirigan a otra página pero dentro del mismo sitio web. Un tipo de enlace mucho más común en el día a día del desarrollo. 
ej. <a href="archivo.html">contenido</a>

Por regla general, para una mejor organización, los sitios suelen estar ordenados por directorios. Estos directorios suelen contener diferentes secciones de la página, imágenes, scripts, estilos... Es por ello que en muchos casos no nos valdrá con especificar el nombre del archivo, sino que tendremos que especificar además el directorio en el que nuestro archivo.html esta alojado.

Si la página de destino está en una carpeta o subdirectorio interior al directorio donde está el archivo de origen, hemos de marcar la ruta enumerando cada uno de los directorios por los que pasamos hasta llegar al archivo de destino, separándolos por el símbolo barra "/". Al final obviamente, escribimos el nombre del archivo destino.

Si la página destino se encuentra en un directorio padre (superior al de la página del enlace), hemos de escribir dos puntos y una barra "../" tantas veces como niveles subamos de carpetas hasta dar con el directorio donde esta emplazado el archivo destino.

ej. Para hacer un enlace desde yyy.html hacia xxx.html cuando xxx.html está en una carpeta diferente:
 
<a href="../seccion2/xxx.html">Ir ahora a xxx.html</a>

<a href="archivo.html#seccion">contenido</a> para enlaces locales que, a su vez, apuntan a la página y a una sección concreta

<a href="http://www.google.com">ir a google.com</a> para enlaces remotos (apuntan a otro sitio web)

<a href="mailto:juan@gmail.com">juan@gmail.com</a> para emails

<a href="malito:juan@gmail.com?subject=contacto por email">juan@gmail.com</a> para emails con asunto

para crear enlaces que abran o descargen archivos también vamos a utilizar la sintaxis del hipervínculo
ej. <a href="fichero.zip">Descargá fichero.zip</a>

Si queremos enlazar hacia otro tipo de archivo como un PDF, podemos hacerlo de la misma manera

Imágenes en HTML

<img src="logo.png"> para insertar una imagen

<img src="logo.png" alt="Descripción del logo o imagen"> el atributo alt sirve para el posicionamiento de la página en buscadores y son usadas por personas con discapacidad

mediante el atributo border podemos indicar que una imagen tenga borde

Listas

Para crear una lista desordenada (unorderedlist)

ej.
<p>Lenguajes de programación</p>

<ul>

	<li>PHP</li>

	<li>JAVA</li>

	<li>Python</li>

</ul>

<ul type="tipo de viñeta"> para especificar el tipo de viñeta. Estos pueden ser circle, disc o square

también podemos hacer listas con varios tipos de viñeta

ej.
<ul type="square">

	<li>Elemento 1

	<li>Elemento 2

	<li>Elemento 3

	<li type="circle">Elemento 4

</ul>

Para crear listas ordenadas (ordered list)

<p>Reglas de convivencia</p>

<ol>

	<li>No hacer ruidos molestos

	<li>Ser amable con los vecinos

</ol>

para cambiar de selección utilizamos type

ej.

<ol> números (1, 2, 3...)

<ol type="A">mayúsculas (A, B, C,...)

<ol type="a">minúsculas (a, b, c...)

<ol type="I">mayúsculas (I, II, III,...)

<ol type="i">minúsculas (i, ii, iii,...)

para elegir por donde empezamos utilizamos start (las listas empiezan por el 1 por defecto) ej. <ol start="2" type="A">

Listas de definición (definition list)

Para realizar una lista de definición, la etiqueta principal es DL y su cierre (definition list). La etiquetas del elemento y su definición son DT (definition term) y DD (definition definition) respectivamente.

ej. 
<p>Alimentos Lácteos</p>

<dl>

<dt>Leche

<dd>descremada

<dd>entera

<dt>Queso

<dd>Fontina

<dd>Muzzarella

</dl>

Se pueden anidar listas

Tablas

Para empezar a crear una tabla se usa table y su cierre

Dentro de estas dos etiquetas colocaremos todas las otras etiquetas de las tablas, hasta llegar a las celdas. Dentro de las celdas ya es permitido colocar textos e imágenes que darán el contenido a la tabla.

Las tablas son descritas por líneas de arriba a abajo (y luego por columnas de izquierda a derecha). Cada una de estas líneas, llamada fila, es definida por otra etiqueta y su cierre: TR

Asimismo, dentro de cada línea, habrá diferentes celdas. Cada una de estas celdas será definida por otra etiqueta: TD. Dentro de ésta y su cierre será donde coloquemos nuestro contenido, el contenido de cada celda.

También es parte de una tabla la etiqueta TH (Table Header), que sirve para crear una celda cuyo contenido posea un título o cabecera de la tabla.

ej.
<table>

<tr>

<th>Celda 1, linea 1</th>

<th> Celda 2, linea 1</th>

</tr>

<tr>

<td> Celda 1, linea 2</td>

<td> Celda 2, linea 2</td>

</tr>

</table>

Otros atributos útiles para la construcción de tablas pueden ser:

cellspacing: es el espacio entre celdas de la tabla.

cellpadding: es el espacio entre el borde de la celda y su contenido.

border: es el número de píxeles que tendrá el borde de la tabla.

bordercolor: es el color a asignar al borde de la tabla.

align: Justifica el texto de la celda del mismo modo que si fuese el de un párrafo.

valign: Podemos elegir si queremos que el texto aparezca arriba (top), en el centro (middle) o abajo (bottom) de la celda.

bgcolor: Da color a la celda o línea elegida.

bordercolor: Define el color del borde.

background: Nos permite colocar un fondo para la celda a partir de un enlace a una imagen.

height: Define la altura de la celda en pixels o porcentaje.

width: Define la anchura de la celda en pixels o porcentaje.

colspan: Expande una celda horizontalmente.

rowspan: Expande una celda verticalmente.

colspan: Fusiona la cantidad de celdas que nosotros le indiquemos

rowspan: Fusiona la cantidad de celdas que nosotros le indiquemos hacia abajo

Frames

iframe sirve para crear un espacio dentro de la página donde se puede incrustar otra web

ej. 
<iframe src="pagina_fuente.html" width=290 height=250>Texto para cuando el navegador no conoce la etiqueta iframe</iframe>

atributos de un iframe:

src: Para indicar la página web que se mostrará en el espacio del frame flotante.

width: Para definir la anchura del recuadro del iframe

height: Para definir la altura del iframe

name: Para especificar el nombre del frame, que podemos utilizar luego para referirnos a él con el target de los links, o mediante javascript.

id: Para indicar el identificador del iframe, y poder referirnos a él desde javascript.

frameborder: para definir si queremos o no que haya un borde en el frame. Los valores posibles son 0 | 1. frameborder=0 indicaría que no queremos borde y frameborder=1 que sí.

scrolling: indica si se quiere que aparezcan barras de desplazamiento para ver los contenidos del iframe completo, en el caso que no aparezcan en el espacio reservado para el iframe. Los valores posibles son: yes | no | auto. El valor "yes" es para que aparezcan siempre las barras de desplazamiento o barras de scroll, "no" sirve para que no aparezcan nunca y "auto" es para que aparezcan sólo cuando son necesarias (es el valor por defecto)

marginwidth: Para definir el margen a izquierda y derechar que debe tener la página que va dentro del iframe, con respecto al borde. Este margen va en pixels, pero prevalecerá el margen que pueda tener asignada la página web que mostremos en el frame flotante.

marginheight: lo mismo que marginwidth, pero en este caso para el tamaño del margen por la parte de arriba y abajo.

margin: para especificar alineación del frame, igual que se especifica para las imágenes.

ej. <iframe name=miframeflotante src="colabora.htm" width=400 height=550 frameborder="0" scrolling=yes marginwidth=2 marginheight=4 align=left>Tu navegador no soporta frames!!</iframe>

Formularios

Los formularios son definidos por medio de las etiquetas form y su cierre. Entre estas dos etiquetas colocaremos todos los campos y botones que componen el formulario. Dentro de esta etiqueta FORM debemos especificar algunos atributos:

action: define el tipo de acción a llevar a cabo con el formulario. Existen dos formas de enviar la información a que sea procesada:

El formulario es enviado a una dirección de correo electrónico

El formulario es enviado a un programa o script que procesa su contenido

ej. <form action="mailto:direccion@correo.com" ...>
ej. <form action="dirección del archivo" ...>

method: Este atributo se encarga de especificar la forma en la que el formulario es enviado. Los dos valores posibles que puede tomar esta atributo son post y get. 

enctype: Se utiliza para indicar la forma en la que viajará la información que se mande por el formulario.

Las cajas de texto son colocadas por medio de la etiqueta input 
ej. <input type="text" name="nombre">

Atributos útiles de las cajas de texto:

value: es muy útil para asignar un valor definido dentro del campo.

size: define el tamaño de la caja de texto, en número de caracteres visibles.

maxlength: indica el tamaño máximo del texto, en número de caracteres, que puede ser escrito en el campo.

<input type="password" name="nombre"> para campos de textos que no muestren el contenido.

el TEXTAREA es útil a la hora de querer poner un texto más largo ej. un comentario.

ej. <textarea name="comentario" rows="10" cols="40">Escribe tu comentrio...</textarea> 

Las listas de opciones son ese tipo de menús desplegables que nos permiten elegir una de las múltiples opciones

ej. 
<select name="estacion">

<option>Primavera</option>

<option>Verano</option>

<option>Otoño</option>

<option>Invierno</option>

</select>

Atributos útiles de los SELECT:

size: Indica el número de valores mostrados a la vez en la lista. Lo típico es que no se incluya ningún valor en el atributo size.

multiple: Permite la selección de más varios elementos de la lista. Se expresa sin valor, simplemente se pone la palabra para conseguir el efecto.

La etiqueta OPTION puede asimismo ser matizada por medio de otros atributos:

selected: Sirve para indicar a una opción como predeterminada.Del mismo modo que multiple, este atributo no toma ningún valor sino que simplemente indica que la opción.

value: Define el valor de la opción que será enviado al programa si el usuario elige esa opción. Este atributo puede resultar muy útil si el formulario es enviado a un programa para su procesamiento.

Por otra parte, con Los RADIOBUTTON; en este caso; obligamos al internauta a elegir únicamente una de las opciones que se le proponen.

ej.
<input type="radio" name="estacion" value="1">Primavera
<br>
<input type="radio" name="estacion" value="2">Verano
<br>
<input type="radio" name="estacion" value="3">Otoño
 
Para  preseleccionar por defecto una de las opciones. Usamos el atributo checked ej.

<input type="radio" name="estacion" value="2" checked>Verano

Los CHECKBOX son un tipo de elementos pueden ser activados o desactivados por el visitante por un simple clic sobre la caja ej. <input type="checkbox" name="jamon">Me gusta el jamón

Del mismo modo que para los RADIOBUTTON, podemos activar la caja por medio del atributo checked.

Botón de envío de formulario (botón de submit) ej. <input type="submit" value="Enviar">

Botón de borrado (botón de reset) ej. <input type="reset" value="Borrar">

Datos ocultos (campos hidden): En algunos casos, aparte de los propios datos rellenados por el usuario, puede resultar práctico enviar datos definidos por nosotros mismos que ayuden al programa en su procesamiento del formulario. Este tipo de datos, que no se muestran en la página pero si pueden ser detectados solicitando el código fuente, no son frecuentemente utilizados por páginas construidas en HTML.

ej. <input type=hidden name="clave" value="1234">

Botones normales: Dentro de los formularios también podemos colocar botones normales, pulsables como cualquier otro botón. Igual que ocurre con los campos hidden, estos botones por si solos no tienen mucha utilidad.

ej. <input type=button value="Texto escrito en el botón">


CSS

Unidad 1

CSS es un lenguaje que consiste en una serie de elementos mediante los cuales se declaran los estilos, básicamente éstos son los más importantes:

 

 Selectores, mediante los cuales podemos especificar qué elementos de la página nos estamos refiriendo

 Atributos de estilo para definir qué cosas queremos estilizar sobre los selectores indicados

 Una serie de valores, que indican qué estilo se debe aplicar a cada atributo sobre cada selector.

Los valores se expresan con unidades CSS, que sirven para cuantificar los valores (píxeles, puntos).

 Lo adecuado cuando trabajamos con CSS es escribir el código en ficheros independientes, que tendrán extensión .css.

Con la etiqueta <div> podemos definir secciones de una página y aplicarle estilos con el atributo style, es decir, podemos definir estilos de una vez a todo un bloque de la página.

El uso de la etiqueta div es englobar partes de un documento HTML para que podamos aplicar estilos a todo el grupo de etiquetas.

Estilo definido para toda una página

Podemos definir, en la cabecera del documento, estilos para que sean aplicados a toda la página. Es una manera muy cómoda de darle forma al documento y muy potente, ya que estos estilos serán seguidos en toda la página

Estilo definido para todo un sitio web

Una de las características más potentes del desarrollo con hojas de estilos es la posibilidad de definir los estilos de todo un sitio web en una única declaración.

Esto se consigue creando un archivo donde tan sólo colocamos las declaraciones de estilos de la página y enlazando todas las páginas del sitio con ese archivo. De este modo, todas las páginas comparten una misma declaración de estilos, reutilizando el código CSS de una manera mucho más potente.

Este es el modelo más ventajoso de aplicar estilos al documento HTML y por lo tanto el más recomendable.

Para incluir los estilos en fichero externo debemos:

1- Creamos el fichero con la declaración de estilos

ej.
P {

font-size : 12pt;

font-family : arial,helvetica;

font-weight : normal;

}

(Para definir un estilo se utilizan atributos, seguidos de dos puntos y el valor que le deseemos asignar).

2- Enlazamos la página web con la hoja de estilos

ej.
<html>

<head>

<link rel="STYLESHEET" href="estilos.css">

<title>Página con estilos.css incorporado</title>

</head>

Medición y Unidades en CSS

Las unidades de medida CSS se pueden clasificar en dos grupos, las relativas y las absolutas. Más la posibilidad de expresar valores en porcentaje. En principio, las unidades relativas son más aconsejables.

Relativas ej. 

Fuente actual: em Es la fuente que se esta trabajando por defecto, si la fuente es de 10 puntos y se coloca 2em se estaría trabajando con una fuente de 20 puntos.

Altura de la letra: ex 1ex sería igual a la altura de la letra de la fuente actual del usuario.

Píxeles: px varían su tamaño real en base a la resolución de la pantalla del usuario.

Absolutas ej.

Puntos pt Un punto equivale a 1/72 pulgadas

Pulgadas in

Centímetros cm

Milímetros mm

Picas pc (equivale a 12 puntos)

Márgenes de página

La propiedad CSS margin establece el margen para los cuatro lados. Es una abreviación para evitar tener que establecer cada lado por separado con las otras propiedades de margen: margin-top, margin-right, margin-bottom y margin-left.

Tipos de posicionamiento

Un elemento posicionado es un elemento cuyo valor computado de position es relative, absolute, fixed, o sticky. (cualquiera excepto static).

relative

El elemento es posicionado de acuerdo al flujo normal del documento, y luego es desplazado con relación a sí mismo, con base en los valores de top, right, bottom, and left.

absolute

El elemento es removido del flujo normal del documento, sin crearse espacio alguno para el elemento en el esquema de la página. Es posicionado relativo a su ancestro posicionado más cercano, si lo hay; de lo contrario, se ubica relativo al bloque contenedor inicial. Su posición final está determinada por los valores de top, right, bottom, y left.

fixed

El elemento es removido del flujo normal del documento, sin crearse espacio alguno para el elemento en el esquema de la página.Su posición final es determinada por los valores de top, right, bottom, y left.

sticky

El elemento es posicionado de acuerdo al flujo normal del documento, y luego es desplazado con relación a su ancestro que se desplace más cercano y su bloque contenedor (ancestro en nivel de bloque más cercano) incluyendo elementos relacionados a tablas, basados en los valores de top, right, bottom, y left. El desplazamiento no afecta la posición de ningún otro elmento.

Posicionamiento absoluto

Los elementos posicionados relativamente se mantienen en el flujo normal del documento. Por el contrario, un elemento posicionado absolutamente es removido del flujo de esta manera, los demás elementos se posicionan como si el mismo no existiera.

Posicionamiento fijo

El posicionamiento fijo es similar al posicionamiento absoluto, con la excepción de que el bloque contenedor del elemento es el viewport. Esto puede usarse para crear un elemento flotante que se mantiene en la misma posición independientemente del desplazamiento.

Teoría de sectores 

Selectores CSS

Los selectores en CSS nos permiten acceder a cualquier elemento o grupo de elementos, para aplicar estilos en una única declaración y como su nombre indica, permiten seleccionar aquellos elementos sobre los que se van a aplicar las reglas de estilo.

 Etiqueta: sirven para seleccionar todos los elementos de una misma etiqueta o tag HTML.

h1 {

font-size: 26px;

}

 Clase: selecciona todos los elementos de una clase determinada. (Class de CSS).

.destacado {

font-weight: bold;

color: orange;

}

 Identificador: permiten seleccionar etiquetas individuales por el atributo Id de la etiqueta.

#mifomulario {

border: 1px solid #99c;

}

 Atributo: permiten seleccionar todas las etiquetas que tengan un atributo dado, o bien un atributo con un valor determinado.

[title] {

text-decoration: none;

}

[align="center"] {

border: 1px solid red;

}

Además, los selectores se pueden combinar entre sí para conseguir selectores mucho más precisos:

Estos selectores obtienen las imágenes que tengan el atributo alt y los párrafos que tengan la clase "desactivado".

img[alt] {

border: none;

}

p.desactivado {

color: #ddd;

}

También podemos relacionar los selectores con un espacio y entonces el significado cambia totalmente, ya que se estaría indicando que un elemento tiene que estar dentro de otro.

Este selector aplicaría estilos a todos los elementos <h2> que estén dentro de contenedores que tienen la clase "nota".

.nota h2 {

font-weight: normal;

}

También podemos combinar los selectores de CSS usando una coma. Entonces estamos indicando que los atributos de estilo deben aplicarse a los dos selectores por separado.

Así estaríamos indicando que queremos aplicar estilos sobre todos los párrafos y todas las divisiones con la clase "bloque".

p, div.bloque {

margin-bottom: 25px;

}

Tipos de selectores

Selector de tipo: Selecciona todos los elementos que coinciden con el nombre del elemento especificado.

ej.
a {

color: red;

}

Selector de clase: Selecciona tidis kis ekementos que tienen el atributo de class especificado.

ej.
.espacios {

margin: 2em;

}

li. espacios {

margin: 2em;

}

Todos los elementos <li> con una clase que incluya ambos "espacios" y "elegante" 

Selector de ID: Selecciona un elemento basándose en el valor de su atributo id. Solo puede haber un elemento con un determinado ID dentro de un documento.

ej.
#demo {

border: red 2px solid;

}

Selector universal: Selecciona todos los elementos. Opcionalmente, puede estar restringido a un espacio de nombre específico o a todos los espacios de nombres.

ej.
* {

color: green;

}

Selector de atributo: Selecciona elementos basándose en el valor de un determinado atributo.

ej.
a[href="https://ejemplo.com.ar"] {

color: green;

}

<a> elementos que vayan a la url "https://ejemplo.com.ar" 

Atributos Globales HTML y CSS

accesskey: Proporciona y genera un acceso de teclado para algún elemento actual. Consiste de una lista de caracteres separados por espacio. Debe constar de sólo un caracter.

ej.
<p>Para probar presioná una
	<strong><u>X</u></strong> y estarás dando foco a este botón:
</p>

<button accesskey="x">Botón de Ejemplo</button>

class: Es una lista de clases del elemento, separado por espacios. Permiten a CSS y JavaScript seleccionar y acceder a elementos específicos a través de seelectores de clase o funciones.

ej.
<p>Periodista: Gracias por la entrevista.</p>

<p class="nota editorial">Esta es una nota realizada en 2019.-</p>

<p>Periodista: Como fueron sus comienzos?.</p>

<p class="nota">[Podés continuar leyendo esta nota en la pag.20]</p>

contenteditable: Es un atributo enumerado que indica si el elemento puede ser modificable por el usuario. Puede ser: true (o un valor vacío) o false.

ej.
<blockquote contenteditable="true">

<p>Edite el contenido de este texto</p>

</blockquote>

<cite contenteditable="true">-- Puede escribir algo aquí</cite>

data-*: Son atributos globales que forman una clase denominados atributos de datos personalizados, y que se caracterizan por permitir intercambiar información entre el HTML en el momento de la carga del archivo HTML.

ej.
<h1>Socios del Club</h1>

<ul>

<li data-socio="10784">Juan Carlos, Vitalicio.</li>

<li data-socio="97865">Roberto Gomez, Juvenil.</li>

<li data-socio="45732">Juana Martinez, Juvenil.</li>

</ul>

dir: Es un atributo enumerado que indica la direccionalidad del texto del elemento. Puede tener los siguientes valores:

ltr, significa left to right y se utiliza para idiomas que se escriben de izquierda a derecha (como el Español).

rtl, significa right to left y se utiliza para idiomas que se escriben de derecha a izquierda (como el Árabe).

hidden: Es un atributo Booleano que indica si el elemento aún no es, o ya no es, relevante.

ej.
<p hidden>Este texto está oculto</p>

<p >Este texto se puede ver </p>

id: Define un identificador único el cual dede ser único en todo el documento.

ej.
<p>Este es un párrafo normal.</p>

<p id="resaltar">Este párrafo queremos que se note mucho!</p>

lang: Participa en la definición del lenguaje del elemento, sólo se refiere al idioma en que son escritos estos elementos.

ej.
<p>Párrafos en diferentes idiomas.</p>

<p lang="en-GB">This paragraph is defined as British English.</p>

<p lang="fr">Ce paragraphe est défini en français.</p>

style: Contiene declaraciones de estilo CSS para ser aplicadas al elemento (no es recomendable, sólo para hacer testeos rápidos es utilizado)

ej.
<div style="background: #ffe7e8; border: 2px solid #e66465;">

<p style="margin: 15px; line-height: 1.5; text-align: center;">

Esta es la primer linea del párrafo y ahora un salto de línea<br>

esta segunda línea sigue siendo aplicada por el style aunque <b>esto debe hacerse con CSS.</b></p>

</div>

tabindex: Es unatributo que recibe un parámetro con un número entero y que indica si el elemento puede obtener el foco del cursor y si debe participar de la navegación secuencial con el teclado. Puede tomar diferentes valores:

un valor negativo: significa que el elemento debe ser focuseable, pero no debe ser alcanzado vía la navegación secuencial del teclado.

Un cero: significa que el elemento puede obtener el foco y alcanzable vía la navegación secuencial del teclado, pero el orden relativo es definido por la convención de la plataforma.

un valor positivo: significa que puede obtener el foco vía la navegación secuencial del teclado, el orden relativo es definido por el valor del atributo y sigue la secuencia en orden ascendente según el valor de tabindex.

title: Contiene un texto que representa información de asesoramiento en relación al elemento al que pertenece.

ej.
<p>Estamos viendo las siguientes tecnologías:

<abbr title="Hypertext Markup Language">HTML</abbr>,

<abbr title="Cascading Stylesheets">CSS</abbr>, and

JavaScript.</p>

translate: Es un atributo enumerado que se utiliza para especificar si los valores de los atributos de un elemento son traducidos cuando su página es localizada. Puede tener los siguientes valores:

cadena vacía y "yes", indica que el elemento será traducido.

"no", indica que el elemento no será traducido.

ej.
<body>

esta página está en idioma español

<footer>

<small>© 2020 <code translate="no">Brand Name</span></code>

</footer>

Unidad 2

Elementos de bloque

Las etiquetas de bloque intentan ocpar el 100% de ancho del sitio. Visualmente generen un salto de línea. Las <div> son ej de etiquetas de salto de bloque.

Elementos en línea

Las etiquetas en línea ocupan sólo el ancho de su contenido y no cambian la distribución del sitio. Su ancho va a a estar determinado por el contenido que lleve dentro. Los <span> son ejemplos de etiquetas en línea.

Tipos de elementos

inline: Define un elemento con comportamiento en línea.

block: Define un elemento con comportamiento de bloque y puede recibir propiedades del modelo de caja.

inline-block: Define un elemento con comportamiento de semi-bloque, puede recibir propiedades del modelo de caja y también comparte propiedades de elementos de línea.

none: Oculta al elemento en la visual.

Modelo de Caja

Es el comportamiento que hace que todos los elementos se representen mediante cajas rectangulares. Estas propiedades sólo aplican a etiquetas de bloque.

Propiedad width (ancho)

El width es el 100% del ancho de su padre, siempre y cuando éste sea contenedor (px o %)

Propiedad height (alto)

El height por defecto va a ser igual a la altura que le proporcione su contenido interno (px).

Propiedad padding (margen interior del elemento)

Se le puede indicar el valor por px. 

NOTA se puede asignar un padding para las todas las direcciones, un padding diferente para cada dirección y 2 padding diferentes, uno para arriba y abajo y otro para la izquierda y derecha 
ej. padding: 22px 30px;

Propiedad border (borde)

Lo asignamos a través de definir su estilo de línea, su tamaño y su color. El estilo de línea puede ser solid, dotted, dashed o double.

Propiedad margin (margen externo del elemento)

Se lo puede indicar usando px.

NOTA se puede asignar el margen de la misma forma que le padding

Propiedad box-sizing

Esta propiedad hace que se descuente el ancho y el alto de la caja en lo que agregamos en relleno y borde.

Flotación

Mediante la propiedad float, le otorgamos la habilidad a un elemento de que pueda salirse del flujo natural del sitio y podemos decidir hacia dónde queremos que ese elemento flote. Los valores que recibe son: left, right, none y inherit

Cómo flotar 

Es importante determinar un ancho para nuestras cajas. Adí vamos a poder controlar cuántass de ellas entran en una misma línea

Cómo se comportan

Si los anchos de las cajas superan el ancho del contenedor, bajarán un renglón. Es clave usar anchos en porcentajes para más sencillez.

Los elementos por debajo del elemento al que le asignamos la flotación, asumen que éste no existe más y ocupan el lugar vacío que el elemento flotante dejó.

La forma de"limpiar flotaciones es usando la propiedad clear: both. Basta con aplicarle dicha propiedad al elemento que se encuentra por debajo de las cajas flotantes para que éste conserve su posición.

Contenedor padre

El elemento con la propiedad flot saldrá también del flujo de su contenedor padre, quien intentará ocupar su lugar "vacío". La forma de controlar este comportamiento es asignándole al padre la propiedad overflow: hidden.

Flexbox

Esta metodología propone una estructura basada en el uso de un contenedor padre (Flex-container) y sus elementos hijos (Flex-items).

Para empezar a trabajar con flexbox tenemos que definir un flex-container. Para eso usamos la propiedad con el valor. De esta forma estamos habilitando un contexto flex para trabajar con los hijos directos del elemento.

NOTA un flex-container es un elemento HTML que contiene uno o más elementos. A estos elementos anidados, los llamamos flex-ítems. En el flex-container es en donde configuramos la mayoría de las propiedades flex

ej.
.contenedor-padre {

display: flex;

}


Flex-Wrap: Para decirle al contenedor que debe respetar el ancho definido de sus hijos

ej.
.contenedor-padre {

display: flex;

flex-wrap: wrap;

}

NOTA un flex ítem, a su vez, puede convertirse en un flex-container

Los eje: Flexbox trabaja con los ejes X y el eje Y

Flex-direction: Para definir el eje (horizontal o vertical) del contenedor.

row: Los ítems se ponen en fila. Es el valor por defecto.

row-reverse: Los ítems se ponen en fila pero de derecha a izquierda.

column: Los ítems se ponen en columna.

column-reverse: Los ítems se ponen en columna pero de abajo hacia arriba.

Propiedades para alinear elementos:

justify-content: Para alinear los ítems a lo largo del main axis.

flex-start: Se alinean respecto al inicio del main axis. Es el valor por defecto.

flex-end: Los ítems se alienan respecto del final.

center: Los ítems se alinean al centro.

space-between: Los ítems se distribuyen de manera uniforme.

space-around: Los ítems se distribuyen de manera uniforme, con igual espacio alrededor de cada uno.

align-ítems: Para alinear los ítems a lo largo del cross axis (eje vertical)

stretch: Los ítems se ajustan para abarcar todo el contenedor.

flex-start: Los ítems se alinean al inicio del eje transversal.

flex-end: Los ítems se alinean al final del eje transversal.

center: Los ítems se alinean al centro del eje transversal.

Pseudo-classes

Es un palabra clave que se añade a los selectores y que especifica un estado especial del elemento seleccionado.

ej.
div:hover {

background-color: #F89B4D;

}

Dice que cuando alguien pase con el mouse por arriba de un div, éste se pondrá con un color de fondo.

Las pseudoclases, junto con los pseudoelementos, permiten aplicar un estilo a un elemento no sólo en relación con el contenido del árbol de docuemento sino también a factores externos. ej. el historial del navegador (:visited).

Selectores avanzados - Los selectores descendientes

El combinador de un espacio en blanco combina dos selectores tales que el selector combinado incluye sólo los elementos que coinciden con el segundo selector para los que hay un elemento ancestro que coincide con el primer selector.

ej.
Sintaxis

selector1 selector2 { propiedades de estilos }

Ejemplo

span { background-color: white; }

div span { background-color: blue; }

<div>

<span>Span 1.

<span>Span 2.</span>

</span>

</div>

<span>Span 3.</span>

CSS3 añade tres nuevos selectores:

elemento[atributo^="valor"], selecciona todos los elementos que disponen de ese atributo y cuyo valor comienza exactamente por la cadena de texto indicada.

elemento[atributo$="valor"], selecciona todos los elementos que disponen de ese atributo y cuyo valor termina exactamente por la cadena de texto indicada.

elemento[atributo*="valor"], selecciona todos los elementos que disponen de ese atributo y cuyo valor contiene la cadena de texto indicada.

ejs.
/* Selecciona todos los enlaces que apuntan a una dirección de correo electrónico */

a[href^="mailto:"] { ... }


/* Selecciona todos los enlaces que apuntan a una página HTML */

a[href$=".html"] { ... }

 
/* Selecciona todos los títulos h1 cuyo atributo title contenga la palabra "capítulo" */

h1[title*="capítulo"] { ... }

Selector general de elementos hermanos y selector adyacente:

h1 + h2 { ... } /* selector adyacente */

h1 ~ h2 { ... } /* selector general de hermanos */

El primer selector (h1 + h2) sólo selecciona el primer elemento <h2> de la página, ya que es el único que cumple que es hermano de <h1> y se encuentra justo detrás en el código HTML. Por su parte, el segundo selector (h1 ~ h2) selecciona todos los elementos <h2> de la página salvo el segundo. Aunque el segundo <h2> se encuentra detrás de <h1> en el código HTML, no son elementos hermanos porque no tienen el mismo elemento padre.

Pseudo-elementos ej:

::first-line, selecciona la primera línea del texto de un elemento.

::first-letter, selecciona la primera letra del texto de un elemento.

::before, selecciona la parte anterior al contenido de un elemento para insertar nuevo contenido generado.

::after, selecciona la parte posterior al contenido de un elemento para insertar nuevo contenido generado.

::selection, selecciona el texto que ha seleccionado un usuario con su ratón o teclado.

elemento:nth-child(numero), selecciona el elemento indicado pero con la condición de que sea el hijo enésimo de su padre ej. Este selector es útil para seleccionar el segundo párrafo de un elemento, el quinto elemento de una lista, etc.

elemento:nth-last-child(numero), idéntico al anterior pero el número indicado se empieza a contar desde el último hijo.

elemento:empty, selecciona el elemento indicado pero con la condición de que no tenga ningún hijo.

elemento:first-child y elemento:last-child, seleccionan los elementos indicados pero con la condición de que sean respectivamente los primeros o últimos hijos de su elemento padre.

elemento:nth-of-type(numero), selecciona el elemento indicado pero con la condición de que sea el enésimo elemento hermano de ese tipo.

elemento:nth-last-of-type(numero), idéntico al anterior pero el número indicado se empieza a contar desde el último hijo.

Otros selectores:

:not(), Se puede utilizar para seleccionar todos los elementos que no cumplen con la condición de un selector:

ej.
:not(p) { ... } /* selecciona todos los elementos de la página que no sean párrafos */

Unidad 3

Animaciones en CSS

En CSS está la posibilidad de establecer estilos mediantes selectores especiales en función de su estado o de acciones que ocurren respeto al mismo. Estos selectores son:

Pseudo-classes: Nos permite esablecer reglas CSS que den estilos a elementos en función de estas acciones o eventos.

ej.
:visited:hover:first-child

Pseudo-elementos: Hacen referencia a partes especificas en relación a la estructura HTML o a secciones dentro de un elemento especificado.

ej.
::before ::after::first-letter

https://animate.style/ para animaciones

Diseño Responsive

Responsive Web Design: es aquel capaz de adaptarse a diferentes tamaños y dispositivos.

Mobile Fisrt Web: Es empezar a diseñar un sitio wewb desde la resolución más pequeña para ir creciando y adaptando el contenido y el diseño a la resolución mas grande.

Lo más recomendable es empezar a maquetar para la vrsión más pequeña.

Debemos conocer el tamaño, resolución o posibles orientaciones de las pantallas en las que necesitamos mostrar nuestro contenido basándonos en los usuarios.

Media Queries

Son las herrameintas que se encargan de aplicar diferentes estilos para diferentes dispositivos. Nacen de la necesidad de crear breakpoins en la hoja de estilo CSS.

Carga de hojas de estilo

La forma más recomendable de cargar un media query es incluir todas las condiciones necesarias dentro de un único archivo CSS, con @media seguido de las condiciones que queremos definir.

ej.
@media (max-width:320px){

<!- Aquí van todos los estilos CSS -->

}

Esta Media Query se ejecutará sólo cuando la anchura de la ventana del navegador sea menor de 320px.

También podemos determinar otros parámetros, como por ejemplo la orientación del dispositivo, importante en dispositivos móviles

ej.
@media (orientation: landscape) {

<!-- Aquí van todos los estilos CSS -->

}

Portrait: orientación vertical

Landscape: orientación horizontal

Operadores lógicos para las Media Queries

También podemos combinar más de una condición en la misma Media Query para concretar todavía más un rango de resolución:

Operador and: las dos condiciones deben cumplirse para que se apliquen los estilos.

Operador not: es una negación de una condición. Cuando esta condición no se cumpla, se aplicarán las media queries definidas.

Operador only: se aplican las reglas solo en el caso de que se cumpla.

Operador or: se pueden poner varias condiciones separadas por comas y en el momento que se cumpla cualquiera de ellas, se aplicarán los estilos.

ej.
@media only screen and (min-width:320px) and (max-width:480px){

<!- Aquí van todos los estilos CSS -->

}

Para esta Media Querie se mostrarán los estilos CSS cuando la anchura de la ventana del navegador sea entre 320px y 480px, ambos incluidos.

Algunos parámetros generales de las condiciones en las Media Queries son:

width: anchura de la ventana del navegador.

height: altura de la ventana del navegador.

device-width: anchura de la resolución de pantalla.

device-height: altura de la resolución de pantalla.

orientation (portrait/landscape): dispositivo en horizontal o en vertical.

resolution: densidad de píxeles.

Excepto la orientación, el resto de parámetros admiten los valores max y min.

max-width: La anchura será menor que la indicada.

min-width: La anchura será mayor que la indicada.

¿Qué hace la meta-etiqueta ViewPort?

Es el área visual donde se plasma el contenido del documento HTML del sitio web. Nos sirve para definir qué área de pantalla está disponible al renderizar un documento.

la escala automática se puede evitar y controlar con el uso del atributo Viewport

ej.
<meta name="viewport" content="width=device-width"/>

NOTA debe incluirse dentro del <head>

Podemos configurar el viewport para ajustarse dinámicamente al tamaño de cada dispositivo usando el atributo "device-width", es equivalente al 100% del ancho de la pantalla del dispositivo.

El alto de la pantalla también es configurable con las mismas propiedades a través del atributo height aunque, salvo condiciones muy específicas, no es necesario definirlo.

También podemos controlar la escala de la vista con el atributo initial-scale. El sitio se mostrará al doble de su tamaño original

ej.
<meta name=viewport content=width=device-width; initial-scale=2/>

Podemos también limitar el tamaño al que se puede escalar el sitio con el atributo maximum-scale 

ej.
<meta name="viewport" content="width=device-width, maximum-scale=2"/>

El ejemplo muestra el documento en escala correcta y permite ampliar (zoom) hasta al doble de su tamaño.

el atributo viewport permite muchas configuraciones, pero para asegurar compatibilidad con la mayor cantidad de pantallas y navegadores móviles, se recomienda utilizar este formato como base:

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

Lo más importante es dejar de usar píxeles y usar porcentajes a la hora de tomar medidas (por ejemplo: width: 60%).

BOOTSTRAP

Es un framework que permite generar en forma más sencilla y con menos código un FrontEnd de una página web en forma responsive y basándose en las cualidades de CSS.

Qué es un Framework?

Un framework de desarrollo es una herramienta de software; que basado en la tecnología de un lenguaje de programación y que, por lo general, se define como una aplicación o conjunto de módulos; permite el desarrollo ágil de aplicaciones mediante la aportación de librerías y/o funcionalidades ya creadas.

Para añadir Bootstrap:


<head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
</head>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"></script>

La propiedad box-sizing

Para que sea más fácil controlar con CSS la anchura/altura de los elementos, Bootstrap cambia el valor de la propiedad box-sizing para no usar el valor por defecto content-box y en su lugar usar border-box.

Este cambio hace que la propiedad padding no afecte al tamaño final de los elementos.

Si alguna vez tienes que cambiar este valor para algún elemento concreto, utiliza lo siguiente:

.selector-de-algun-elemento {

box-sizing: content-box;

}

Cuadrícula de Bootstrap

La cuadrícula basada en flexbox es un sistema de doce columnas, cinco niveles de respuesta predeterminados. Utiliza una serie de contenedores, filas y columnas para diseñar y alinear el contenido. 

ej.
<div class="row">
        <div class="col-md-4 border">hola</div>
        <div class="col-md-4 border">hola</div>
        <div class="col-md-4 border">hola</div>
</div>

Opciones de cuadrícula

Mientras Bootstrap usa em o rem para definir la mayoría de tamaños, px se usan para puntos de interrupción de cuadrícula y anchos de contenedor. Esto se debe a que el ancho de la ventana gráfica está en píxeles y no cambia con el tamaño de fuente.
	
Extra pequeño
<576px

Pequeño
=576px

Medio
=768px

Grande
=992px

Extra grande
=1200px

Ancho máximo del contenedor

Ninguno (automático)

540 px

720px

960 px

1140 px

Prefijo de clase

.col-xs

.col-sm-

.col-md-

.col-lg-

.col-xl-

Multilínea de igual ancho

w-100 donde desee que las columnas se dividan en una nueva línea.

Contenido de ancho variable

Use col-{breakpoint}-autoclases para dimensionar columnas según el ancho natural de su contenido.

ej.
</div>

<div class="col-md-auto">

Mezclar y combinar

Para que las columnas simplemente se apilen en algunos niveles de cuadrícula podemos utilizar una combinación de diferentes clases para cada nivel según sea necesario.

ej.
<div class="container">

	<div class="row">

		<div class="col-md-8">.col-md-8</div>
	
		<div class="col-6 col-md-4">.col-6 .col-md-4</div>
	</div>

</div>

Paddings

Aquí hay un ejemplo de cómo personalizar la cuadrícula Bootstrap en el lg punto de interrupción. Hemos aumentado el .col acolchado con .px-lg-5, lo hemos contrarrestado con .mx-lg-n5 en el padre .row y luego hemos ajustado el .container con .px-lg-5.

ej.
<div class="container px-lg-5">

	<div class="row mx-lg-n5">

		<div class="col py-3 px-lg-5 border bg-light">Custom column padding</div>

		<div class="col py-3 px-lg-5 border bg-light">Custom column padding</div>

	</div>

</div>

Row-Cols

Utilizar las .row-cols-* clases responsives para establecer rápidamente la cantidad de columnas que mejor representen tu contenido y diseño. Mientras que las .col-* clases normales se aplican a las columnas individuales. Las clases de columnas de fila se establecen en el padre .row como una forma rápida.

Utilizar estas clases de filas y columnas para crear rápidamente diseños de cuadrícula básicos o para controlar los diseños de tus tarjetas.

ej.
<div class="container">

	<div class="row row-cols-2">

		<div class="col">Column</div>

		<div class="col">Column</div>

		<div class="col">Column</div>

		<div class="col">Column</div>

	</div>

</div>

Bordes y Estilos

Los bordes entre columnas en nuestras clases de cuadrícula predefinidas se pueden eliminar con .no-gutters. Esto elimina la negativa margins de .row y la horizontal padding de todas las columnas hijos inmediatos.

<div class="row no-gutters">

	<div class="col-sm-6 col-md-8">.col-sm-6 .col-md-8</div>

	<div class="col-6 col-md-4">.col-6 .col-md-4</div>

</div>

Envoltura de columna

Si se colocan más de 12 columnas en una sola fila, cada grupo de columnas adicionales, como una unidad, se ajustará a una nueva línea.

ej.
<div class="container">

<div class="row">

	<div class="col-9">.col-9</div>

		<div class="col-4">.col-4<br>Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped 			into a new 	line as one contiguous unit.</div>

		<div class="col-6">.col-6<br>Subsequent columns continue along the new line.</div>

	</div>

</div>

Saltos de columna

Romper columnas a una nueva línea en flexbox requiere un pequeño truco: agregá un elemento width: 100% donde quieras que desees ajustar tus columnas a una nueva línea.

ej.
<div class="w-100"></div>

otro ej pero con breakpoints.

<!-- Force next columns to break to new line at md breakpoint and up -->

<div class="w-100 d-none d-md-block"></div>

Formularios

<fieldset> no tienen bordes, relleno ni margen.

<legend> se usar para mostrar una especie de encabezado.

<label> están configurados para display: inline-block y permitir margin.

<input>, <select>, <textarea> y <button> son abordados principalmente por Normalize, pero Reboot elimina sus margin conjuntos line-height: inherit y también.

<textarea> Los mensajes de correo electrónico se modifican para que solo se puedan cambiar de tamaño verticalmente.

<button> y los <input> elementos button tienen cursor: pointer when :not(:disabled).

Encabezados y párrafos

Todos los elementos de encabezado, por ejemplo, <h1> y <p> se restablecen para que se margin-top eliminen. Se han margin-bottom: .5rem agregado títulos y párrafos margin-bottom: 1rem para facilitar el espaciado.

Listas

A todas las listas <ul>, <ol>y <dl> se le han eliminados los margin-top y se ha establecido el  margin-bottom: 1rem. Las listas anidadas no tienen margin-bottom.

Tablas 

Las tablas se ajustan ligeramente a los estilos <caption>, contraen los bordes y garantizan la coherencia en text-align todas partes. Los cambios adicionales para los bordes, el relleno y más vienen con la .tableclase

Texto preformateado

El elemento <pre> se reinicia para eliminar su margin-top y usar unidades rem para su margin-bottom.

Elementos varios

El elemento <address> se utiliza para presentar la información de contacto del antepasado más cercano (o todo un trabajo).

ej.
Twitter,
Inc.1355 Market St, Suite 900
San Francisco, CA 94103
P: (123) 456-7890

<blockquote>: El valor predeterminado margin en blockquotes es 1em 40px, por lo que lo restablecemos a 0 0 1rem algo más consistente con otros elementos.

Tipografía 

Todos los títulos desde el h1 hasta el h6 están disponibles a través de su respectiva clase.

ej.
<p class="h1">h1. Bootstrap heading</p>

<p class="h2">h2. Bootstrap heading</p>

<p class="h3">h3. Bootstrap heading</p>

<p class="h4">h4. Bootstrap heading</p>

<p class="h5">h5. Bootstrap heading</p>

<p class="h6">h6. Bootstrap heading</p>

Personalización de títulos

Utilice las clases de utilidad incluidas para recrear el pequeño texto del encabezado secundario de Bootstrap 3.

ej.

<h3>

Fancy display heading

<small class="text-muted">With faded secondary text</small>

</h3>

Mostrar títulos

Cuando necesite que un encabezado se destaque, considere usar un encabezado de visualización , un estilo de encabezado más grande y un poco más obstinado.

ej.
<h1 class="display-1">Display 1</h1>

<h1 class="display-2">Display 2</h1>

<h1 class="display-3">Display 3</h1>

<h1 class="display-4">Display 4</h1>

Dirigir

Haga que un párrafo se destaque agregando .lead

ej.
<p class="lead">

Párrafo destacado.

</p>

Alineación

Utilice las utilidades de texto según sea necesario para cambiar la alineción de su cita en bloque.

ej.
<blockquote class="blockquote text-center">

<p class="mb-0">Renglón 1</p>

<footer class="blockquote-footer">Renglón 2 <cite title="Source Title">Título</cite></footer>

</blockquote>

Imágenes responsives

Las imágenes en Bootstrap responden con .img-fluid

Max-width: 100%; y  height: auto; se aplican a la imagen para que se adapte al elemento principal.

ej.
<img src="..." class="img-fluid" alt="Responsive image">

Miniaturas de imágenes

Además de las utilidades de radio de borde, podés utilizar .img-thumbnail para dar a una imagen una apariencia de borde redondeado de 1 px.

ej.
<img src="..." alt="..." class="img-thumbnail">

Alinear imágenes 

Alineá las imágenes con las clases flotantes auxiliares o las clases de alineación de texto .Block

Las imágenes de nivel se pueden centrar usando la clase .mx-auto

ej.
<img src="..." class="rounded float-left" alt="...">

<img src="..." class="rounded float-right" alt="...">

<img src="..." class="rounded mx-auto d-block" alt="...">

 

<div class="text-center">

<img src="..." class="rounded" alt="...">

</div>

Imagen si estás utilizando el elemento <picture> para especificar varios elementos <source> para un específico <img>, tenés que agregar la clase .img-*<img>

Botones

Grupo de botones

Envolvé una serie de botones con .btn en .btn-group. Agregá el comportamiento de estilo de casilla de verificación y radio de JavaScript opcional con el comportamiento de botones.

ej.
<div class="btn-group" role="group" aria-label="Basic example">

<button type="button" class="btn btn-secondary">Left</button>

<button type="button" class="btn btn-secondary">Middle</button>

<button type="button" class="btn btn-secondary">Right</button>

</div>

Barra de herramientas de botones 

Combiná conjuntos de grupos de botones en barras de herramientas de botones para obtener componentes más complejos.

Utilizá las clases de servicios según sea necesario para espaciar grupos, botones y más.

ej.
<div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">

<div class="btn-group mr-2" role="group" aria-label="First group">

<button type="button" class="btn btn-secondary">1</button>

<button type="button" class="btn btn-secondary">2</button>

<button type="button" class="btn btn-secondary">3</button>

<button type="button" class="btn btn-secondary">4</button>

</div>

<div class="input-group">

<div class="input-group-prepend">

<div class="input-group-text" id="btnGroupAddon">@</div>

</div>

<input type="text" class="form-control" placeholder="Input group example" aria-label="Input group example" aria-describedby="btnGroupAddon">

</div>

</div>

Anidamiento

Colocá un .btn-group dentro de otro .btn-group cuando desees que los menús desplegables se mezclen con una serie de botones.

ej.
    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">

        <button type="button" class="btn btn-secondary">1</button>
        
        <button type="button" class="btn btn-secondary">2</button>
        
         
        
        <div class="btn-group" role="group">
        
        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">

            Dropdown

        </button>
        
        <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
        
        <a class="dropdown-item" href="#">Dropdown link</a>
        
        <a class="dropdown-item" href="#">Dropdown link</a>
        
        </div>
        
        </div>
        
    </div>

<a class="dropdown-item" href="#">Dropdown link</a>

<a class="dropdown-item" href="#">Dropdown link</a>

</div>

</div>

</div> 

Componentes gráficos 

Alertas

Proporciona mensajes de retroalimentación contextual para las acciones típicas del usuario con un puñado de mensajes de alerta disponibles y flexibles.

ej.
Código

<div class="alert alert-primary" role="alert">

A simple primary alertcheck it out!

</div>

<div class="alert alert-secondary" role="alert">

A simple secondary alertcheck it out!

</div>

<div class="alert alert-success" role="alert">

A simple success alertcheck it out!

</div>

<div class="alert alert-danger" role="alert">

A simple danger alertcheck it out!

</div>

<div class="alert alert-warning" role="alert">

A simple warning alertcheck it out!

</div>

<div class="alert alert-info" role="alert">

A simple info alertcheck it out!

</div>

<div class="alert alert-light" role="alert">

A simple light alertcheck it out!

</div>

<div class="alert alert-dark" role="alert">

A simple dark alertcheck it out!

</div>

<div class="alert alert-light" role="alert">

A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.

</div>

<div class="alert alert-dark" role="alert">

A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.

</div>

Badges

Las badges se escalan para coincidir con el tamaño del elemento principal inmediato mediante el uso de em unidades y tamaños de fuente relativos.

ej.
<h1> Encabezado de ejemplo <span class="badge badge-secondary">Nuevo</span></h1>

<h2> Encabezado de ejemplo <span class="badge badge-secondary">Nuevo</span></h2>

<h3> Encabezado de ejemplo <span class="badge badge-secondary">Nuevo</span></h3>

<h4> Encabezado de ejemplo <span class="badge badge-secondary">Nuevo</span></h4>

<h5> Encabezado de ejemplo <span class="badge badge-secondary">Nuevo</span></h5>

<h6> Encabezado de ejemplo <span class="badge badge-secondary">Nuevo</span></h6>

Variaciones contextuales

Agregá cualquiera de las clases de modificadores que se mencionan a continuación para cambiar la apariencia de una insignia.

ej.
<span class="badge badge-primary">Primary</span>

<span class="badge badge-secondary">Secondary</span>

<span class="badge badge-success">Success</span>

<span class="badge badge-danger">Danger</span>

<span class="badge badge-warning">Warning</span>

<span class="badge badge-info">Info</span>

<span class="badge badge-light">Light</span>

<span class="badge badge-dark">Dark</span>

Badges de pastillas 

Utilice la clase modificado .badge-pill para hacer que las badges sean más redondeadas

ej.
<span class="badge badge-pill badge-primary">Primary</span>

<span class="badge badge-pill badge-secondary">Secondary</span>

<span class="badge badge-pill badge-success">Success</span>

<span class="badge badge-pill badge-danger">Danger</span>

<span class="badge badge-pill badge-warning">Warning</span>

<span class="badge badge-pill badge-info">Info</span>

<span class="badge badge-pill badge-light">Light</span>

<span class="badge badge-pill badge-dark">Dark</span>

Enlaces

El uso de las clases contextuales .badge- en un elemento <a> proporciona rápidamente badges procesables con estados de desplazamiento y enfoque

ej.
<a href="#" class="badge badge-primary">Primary</a>

<a href="#" class="badge badge-secondary">Secondary</a>

<a href="#" class="badge badge-success">Success</a>

<a href="#" class="badge badge-danger">Danger</a>

<a href="#" class="badge badge-warning">Warning</a>

<a href="#" class="badge badge-info">Info</a>

<a href="#" class="badge badge-light">Light</a>

<a href="#" class="badge badge-dark">Dark</a>

Botones

Usá los estilos de botones personalizados de Bootstrap para acciones en formualrios, cuadros de diálogo y más.

ej.
<button type="button" class="btn btn-primary">Primary</button>

<button type="button" class="btn btn-secondary">Secondary</button>

<button type="button" class="btn btn-success">Success</button>

<button type="button" class="btn btn-danger">Danger</button>

<button type="button" class="btn btn-warning">Warning</button>

<button type="button" class="btn btn-info">Info</button>

<button type="button" class="btn btn-light">Light</button>

<button type="button" class="btn btn-dark">Dark</button>

<button type="button" class="btn btn-link">Link</button>

Deshabilitar el aguste de texto

Si no queres que el texto del botón se ajuste, podés agregar la clase .text-nowrap al botón.

Etiquetas de botón

Las .btn clases están diseñadas para usarse con el elemento <button>. Pero también podés usar estas clases en elementos <a> o <input>

Estos vínculos deben tener una  role="button" para transmitir adecuadamente su propósito a tecnologías de asistencia como lectores de pantalla.

ej.
<a class="btn btn-primary" href="#" role="button">Link</a>

<button class="btn btn-primary" type="submit">Button</button>

<input class="btn btn-primary" type="button" value="Input">

<input class="btn btn-primary" type="submit" value="Submit">

<input class="btn btn-primary" type="reset" value="Reset">

Botones de contorno

Si necesitas un botón pero sin colores de fondeo, entonces reemplazá las clases de modificadores predeterminadas con las .btn-outline-* que eliminan todas las imágenes y colores de fondo en cualquier botón.

ej.
<button type="button" class="btn btn-outline-primary">Primary</button>

<button type="button" class="btn btn-outline-secondary">Secondary</button>

<button type="button" class="btn btn-outline-success">Success</button>

<button type="button" class="btn btn-outline-danger">Danger</button>

<button type="button" class="btn btn-outline-warning">Warning</button>

<button type="button" class="btn btn-outline-info">Info</button>

<button type="button" class="btn btn-outline-light">Light</button>

<button type="button" class="btn btn-outline-dark">Dark</button>

Tamaños

Si necesitas botones más grandes o más pequeños, agregá .btn-lg o .btn-sm 

ej.
<button type="button" class="btn btn-primary btn-lg">Large button</button>

<button type="button" class="btn btn-secondary btn-lg">Large button</button>

Código

<button type="button" class="btn btn-primary btn-sm">Small button</button>

<button type="button" class="btn btn-secondary btn-sm">Small button</button>

Creá botones de nivel de bloque, que abarcan todo el ancho de un padre, agregando .btn-block.

<button type="button" class="btn btn-primary btn-lg btn-block">Block level button</button>

<button type="button" class="btn btn-secondary btn-lg btn-block">Block level button</button>

Estado activo

Podés forzar la apariencia del activado con .active e incluir el atributo aria-pressed="true"

ej.
<a href="#" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Primary link</a>

<a href="#" class="btn btn-secondary btn-lg active" role="button" aria-pressed="true">Link</a>

Estado disable

Para que los botones parezcan inactivos se agrega el atributo disable booleano a cualquier elemento <button>

ej.
<button type="button" class="btn btn-lg btn-primary" disabled>Primary button</button>

<button type="button" class="btn btn-secondary btn-lg" disabled>Button</button>

<a> no admiten el atributo disabled, por lo que debe agregar la clase .disabled para que aparezca visualmente deshabilitada.

Tarjetas

Una tarjeta es un contenedor de contenido que incluye opciones para encabezados y pies de página, entre otros.

Son construidas con flexbox, ofrencen una alineación fácil y no tienen margin por defecto.

ej.
<div class="card" style="width: 18rem;">

<img src="..." class="card-img-top" alt="...">

<div class="card-body">

<h5 class="card-title">Card title</h5>

<p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>

<a href="#" class="btn btn-primary">Go somewhere</a>

</div>

</div>

Carrusel

Es un componente de presentación de diapositivas para recorrer elementos (imágenes o dispositivas de texto).

No es posible anidarlos y no normalizan automáticamente las dimensaiones de las diapositivas.

Las clase .active debe agregarse a una de las diapositivas para que éste sea visible. Además, se debe establecer una identificación única en los controles .carousel opcionales

Los elementos de control e indicador deben tener un atributo data-target (o href para enlaces) que coincida con el id del elemento .carousel.

ej.
<div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">

<div class="carousel-inner">

<div class="carousel-item active">

<img src="..." class="d-block w-100" alt="...">

</div>

<div class="carousel-item">

<img src="..." class="d-block w-100" alt="...">

</div>

<div class="carousel-item">

<img src="..." class="d-block w-100" alt="...">

</div>

</div>

</div>

Carrusel con controles

ej.
<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">

<div class="carousel-inner">

<div class="carousel-item active">

<img src="..." class="d-block w-100" alt="...">

</div>

<div class="carousel-item">

<img src="..." class="d-block w-100" alt="...">

</div>

<div class="carousel-item">

<img src="..." class="d-block w-100" alt="...">

</div>

</div>

<a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">

<span class="carousel-control-prev-icon" aria-hidden="true"></span>

<span class="sr-only">Previous</span>

</a>

<a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">

<span class="carousel-control-next-icon" aria-hidden="true"></span>

<span class="sr-only">Next</span>

</a>

</div>

Carrusel con indicadores

ej.
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">

<ol class="carousel-indicators">

<li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>

<li data-target="#carouselExampleIndicators" data-slide-to="1"></li>

<li data-target="#carouselExampleIndicators" data-slide-to="2"></li>

</ol>

<div class="carousel-inner">

<div class="carousel-item active">

<img src="..." class="d-block w-100" alt="...">

</div>

<div class="carousel-item">

<img src="..." class="d-block w-100" alt="...">

</div>

<div class="carousel-item">

<img src="..." class="d-block w-100" alt="...">

</div>

</div>

<a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">

<span class="carousel-control-prev-icon" aria-hidden="true"></span>

<span class="sr-only">Previous</span>

</a>

<a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">

<span class="carousel-control-next-icon" aria-hidden="true"></span>

<span class="sr-only">Next</span>

</a>

</div>

Además de los anteriores, también existe el carrusel con subtítulos.

Componentes de navegación

Navs

El componente .nav base está construido con flexbox y proporciona una base sólida para construir todo tipo de componentes de navegación. Incluye algunas modificaciones de estilo (para trabajar con listas), algo de relleno de enlaces para áreas de impacto más grandes y estilo básico deshabilitado.

ej.
<ul class="nav">

<li class="nav-item">

<a class="nav-link active" href="#">Active</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>

</li>

</ul>

Estilos disponibles

Alineación horizontal

Cambia la alineación horizontal de su navegador con las utilidades de flexbox.

ej.
Centrado con .justify-content-center:

<ul class="nav justify-content-center">

<li class="nav-item">

<a class="nav-link active" href="#">Active</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>

</li>

</ul>

ej.
Alineado a la derecha con .justify-content-end:

<ul class="nav justify-content-end">

<li class="nav-item">

<a class="nav-link active" href="#">Active</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>

</li>

</ul>

Alineación vertical

Cambiando la dirección del elemento flexible con la utilidad .flex-column. Utilizá las versiones receptivas (ej. .flex-sm-column).

ej.
<ul class="nav flex-column">

<li class="nav-item">

<a class="nav-link active" href="#">Active</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>

</li>

</ul>

Como siempre, la navegación vertical también es posible sin <ul>.

Pestañas

Es la navegación básica desde arriba y agrega la clase .nav-tabs para generar interfaz con pestañas.

ej.
<ul class="nav nav-tabs">

<li class="nav-item">

<a class="nav-link active" href="#">Active</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>

</li>

</ul>

Pestañas con menús desplegables

ej.
<ul class="nav nav-tabs">

<li class="nav-item">

<a class="nav-link active" href="#">Active</a>

</li>

<li class="nav-item dropdown">

<a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>

<div class="dropdown-menu">

<a class="dropdown-item" href="#">Action</a>

<a class="dropdown-item" href="#">Another action</a>

<a class="dropdown-item" href="#">Something else here</a>

<div class="dropdown-divider"></div>

<a class="dropdown-item" href="#">Separated link</a>

</div>

</li>

<li class="nav-item">

<a class="nav-link" href="#">Link</a>

</li>

<li class="nav-item">

<a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>

</li>

</ul>

Formularios

ej.
<form>

<div class="form-group">

<label for="exampleInputEmail1">Email address</label>

<input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">

<small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>

</div>

<div class="form-group">

<label for="exampleInputPassword1">Password</label>

<input type="password" class="form-control" id="exampleInputPassword1">

</div>

<div class="form-group form-check">

<input type="checkbox" class="form-check-input" id="exampleCheck1">

<label class="form-check-label" for="exampleCheck1">Check me out</label>

</div>

<button type="submit" class="btn btn-primary">Submit</button>

</form>

Dimensionamiento

Podés estableces alturas usando clases como .form-control-lg y .form-control-sm

ej.
<select class="form-control form-control-lg">

<option>Large select</option>

</select>

<select class="form-control">

<option>Default select</option>

</select>

<select class="form-control form-control-sm">

<option>Small select</option>

</select>

Solo lectura

Agregue el atributo booleano readonly en una entrada para evitar la modificación del valor de la entrada.

ej.
<input class="form-control" type="text" placeholder="Readonly input here..." readonly>

Texto sin formato de solo lectura

Use la clase .form-control-plaintext para eliminar el estilo predeterminado del campo del formulario y conservar el margen y el relleno correctos.

ej.
<form>

<div class="form-group row">

<label for="staticEmail" class="col-sm-2 col-form-label">Email</label>

<div class="col-sm-10">

<input type="text" readonly class="form-control-plaintext" id="staticEmail" value="email@example.com">

</div>

</div>

<div class="form-group row">

<label for="inputPassword" class="col-sm-2 col-form-label">Password</label>

<div class="col-sm-10">

<input type="password" class="form-control" id="inputPassword">

</div>

</div>

</form>

Entradas de rango

Configure entradas de rango desplazables horizontalmente usando .form-control-range.

ej.
<form>

<div class="form-group">

<label for="formControlRange">Example Range input</label>

<input type="range" class="form-control-range" id="formControlRange">

</div>

</form>

Casillas de verificación y radios

Las casillas de verificación son para seleccionar una o varias opciones en una lista, mientras que las radios son para seleccionar una opción entre muchas.

Se admiten casillas de verificación y radios deshabilitadas. El atributo disabled aplicará un color más claro.

Predeterminado (apilado)

ej.
<div class="form-check">

<input class="form-check-input" type="checkbox" value="" id="defaultCheck1">

<label class="form-check-label" for="defaultCheck1">

Default checkbox

</label>

</div>

<div class="form-check">

<input class="form-check-input" type="checkbox" value="" id="defaultCheck2" disabled>

<label class="form-check-label" for="defaultCheck2">

Disabled checkbox

</label>

</div>

Código

<div class="form-check">

<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked>

<label class="form-check-label" for="exampleRadios1">

Default radio

</label>

</div>

<div class="form-check">

<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2">

<label class="form-check-label" for="exampleRadios2">

Second default radio

</label>

</div>

<div class="form-check">

<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3" disabled>

<label class="form-check-label" for="exampleRadios3">

Disabled radio

</label>

</div>

En línea

<div class="form-check form-check-inline">

<input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">

<label class="form-check-label" for="inlineCheckbox1">1</label>

</div>

<div class="form-check form-check-inline">

<input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">

<label class="form-check-label" for="inlineCheckbox2">2</label>

</div>

<div class="form-check form-check-inline">

<input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3" disabled>

<label class="form-check-label" for="inlineCheckbox3">3 (disabled)</label>

</div>

Código

<div class="form-check form-check-inline">

<input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">

<label class="form-check-label" for="inlineRadio1">1</label>

</div>

<div class="form-check form-check-inline">

<input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">

<label class="form-check-label" for="inlineRadio2">2</label>

</div>

<div class="form-check form-check-inline">

<input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio3" value="option3" disabled>

<label class="form-check-label" for="inlineRadio3">3 (disabled)</label>

</div>

Texto de ayuda

El texto de ayudar a nivel de bloque en formularios se pueden crear usando .form-text. 

Asociación de texto de ayuda con controles de formulario

El texto de ayuda debe asociarse explícitamente con el control de formulario relacionado con el uso del aria-describedby atributo. Esto garantizará que las tecnologías de asistencia, como los lectores de pantalla, anuncien este texto de ayuda cuando el usuario se enfoque o ingrese al control.

ej.
<label for="inputPassword5">Password</label>

<input type="password" id="inputPassword5" class="form-control" aria-describedby="passwordHelpBlock">

<small id="passwordHelpBlock" class="form-text text-muted">

Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.

</small>







